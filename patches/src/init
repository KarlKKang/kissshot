#!/bin/bash

abort() {
  /bin/echo "$1"
  /bin/echo "You will be dropped to a shell. Exit the shell to reboot."
  /bin/bash
  /bin/umount -a
  read -p "Press ENTER key to reboot..."
  /bin/echo
  /sbin/reboot -fd
}

find_device() {
  # find which USB flash device/partition has the indicated label
  local LABEL=$1
  local i
  for i in {1..30}; do
    DEVICE=$(/sbin/blkid -L "$LABEL")
    [[ -z $DEVICE ]] && /bin/sleep 1 || return 0
  done
  return 1
}

/sbin/mount -v -n -t proc proc /proc
/sbin/mount -v -n -t sysfs sysfs /sys
/sbin/mount -v -n -t tmpfs -o mode=0755,size=128M,nodev,nosuid,noexec tmpfs /run
/sbin/mount -v -n -t devtmpfs -o size=8M devtmpfs /dev

# prepare the UNRAID USB flash drive
UNRAID_LABEL="UNRAID"
/bin/echo -n "waiting up to 30 sec for device with label $UNRAID_LABEL to come online ... "
if find_device "$UNRAID_LABEL"; then
  /bin/echo "found $DEVICE"
else
  abort "not found"
fi
/bin/echo "Checking $DEVICE ..."
FSCK=$(/sbin/fsck.fat -a -w "$DEVICE" 2>/dev/null)
if [[ "$FSCK" == *"differences between boot sector and its backup"* ]]; then
  /sbin/fsck.fat -w "$DEVICE" 2>/dev/null <<<"1"
else
  /bin/echo "$FSCK"
fi
UNRAID_DEVICE=$DEVICE

# prepare the root device
ROOT_LABEL="ROOT"
/bin/echo -n "waiting up to 30 sec for device with label $ROOT_LABEL to come online ... "
if find_device "$ROOT_LABEL"; then
  /bin/echo "found $DEVICE"
else
  abort "not found"
fi
/sbin/btrfs device scan --all-devices || abort "cannot scan for BTRFS devices"
ROOT_DEVICE=$DEVICE

# mount root device
ROOT_DEVICE_MNT=/mnt/root_device
/bin/mkdir -p "$ROOT_DEVICE_MNT"
/sbin/mount -v -t btrfs -o auto,rw,noatime,nodiratime,degraded "$ROOT_DEVICE" "$ROOT_DEVICE_MNT" || abort "cannot mount $ROOT_DEVICE"

# prepare the overlayfs for the new root
ROOT_OVERLAY_DIR="$ROOT_DEVICE_MNT/root"
if [ -x "$ROOT_OVERLAY_DIR/deploy/sbin/init" ]; then
  /bin/rm -rf "$ROOT_OVERLAY_DIR/lowerdir"
  /bin/mv "$ROOT_OVERLAY_DIR/deploy" "$ROOT_OVERLAY_DIR/lowerdir"
fi
/bin/rm -rf "$ROOT_OVERLAY_DIR/upperdir" "$ROOT_OVERLAY_DIR/workdir"
/bin/mkdir "$ROOT_OVERLAY_DIR/upperdir" "$ROOT_OVERLAY_DIR/workdir" || abort "cannot create overlayfs directories"

# mount the new root
ROOT_MNT=/mnt/root
/bin/mkdir -p "$ROOT_MNT"
/sbin/mount -v -t overlay overlay -o "lowerdir=$ROOT_OVERLAY_DIR/lowerdir,upperdir=$ROOT_OVERLAY_DIR/upperdir,workdir=$ROOT_OVERLAY_DIR/workdir" "$ROOT_MNT" || abort "cannot mount overlayfs for $ROOT_MNT"

# mount the UNRAID USB flash into the new root
BOOT_MNT=/mnt/root/boot
/bin/mkdir -p "$BOOT_MNT"
/sbin/mount -v -t vfat -o auto,rw,flush,noatime,nodiratime,dmask=77,fmask=177,shortname=mixed "$UNRAID_DEVICE" "$BOOT_MNT" || abort "cannot mount $UNRAID_DEVICE"

# bind mount the config directory
mkdir -p "$BOOT_MNT/config"
/sbin/mount -v --bind "$ROOT_DEVICE_MNT/config" "$BOOT_MNT/config" || abort "cannot bind mount $ROOT_DEVICE_MNT/config to $BOOT_MNT/config"

# bind mount ROOT_OVERLAY_DIR into the new root
mkdir -p "$BOOT_MNT/root"
/sbin/mount -v --bind "$ROOT_OVERLAY_DIR" "$BOOT_MNT/root" || abort "cannot bind mount $ROOT_OVERLAY_DIR to $BOOT_MNT/root"

exec /sbin/switch_root "$ROOT_MNT" /sbin/init "$@" || abort "cannot switch root to $ROOT_MNT"
