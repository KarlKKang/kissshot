#!/bin/bash

abort() {
  /bin/echo "$1"
  if read -r -t 5 -p "Press ENTER to enter a shell..."; then
    /bin/echo "You will be dropped to a shell. Exit the shell to reboot."
    /bin/bash
  else
    /bin/echo
  fi
  /bin/umount -a
  read -rp "Press ENTER key to reboot..."
  /sbin/reboot -fd
}

find_device() {
  # find which USB flash device/partition has the indicated label
  local LABEL=$1
  local i
  for i in {1..30}; do
    DEVICE=$(/sbin/blkid -L "$LABEL")
    [[ -z $DEVICE ]] && /bin/sleep 1 || return 0
  done
  return 1
}

/sbin/mount -v -t proc proc /proc || abort "Cannot mount proc on /proc"
/sbin/mount -v -t sysfs sysfs /sys || abort "Cannot mount sysfs on /sys"
/sbin/mount -v -t tmpfs -o mode=0755,size=128M,nodev,nosuid,noexec tmpfs /run || abort "Cannot mount tmpfs on /run"
/sbin/mount -v -t devtmpfs -o size=8M devtmpfs /dev || abort "Cannot mount devtmpfs on /dev"

if read -r -t 5 -p "Press ENTER to enter a shell..."; then
  /bin/echo "You will be dropped to a shell. Exit the shell to continue."
  /bin/bash
else
  /bin/echo
fi

/sbin/modprobe zfs || abort "cannot load zfs module"

# prepare the UNRAID USB flash drive
UNRAID_LABEL="UNRAID"
/bin/echo -n "waiting up to 30 sec for device with label $UNRAID_LABEL to come online ... "
if find_device "$UNRAID_LABEL"; then
  /bin/echo "found $DEVICE"
else
  abort "not found"
fi
/bin/echo "Checking $DEVICE ..."
FSCK=$(/sbin/fsck.fat -a -w "$DEVICE" 2>/dev/null)
if [[ "$FSCK" == *"differences between boot sector and its backup"* ]]; then
  /sbin/fsck.fat -w "$DEVICE" 2>/dev/null <<<"1"
else
  /bin/echo "$FSCK"
fi
UNRAID_DEVICE=$DEVICE

# import the rpool
/sbin/zpool import -f -m -N rpool || abort "cannot import rpool"
/sbin/zpool status -P rpool
/sbin/zfs set canmount=off rpool || abort "cannot set canmount on rpool"

# clone the production snapshot of the root dataset
RUNNING_DATASET="rpool/root-running"
if /sbin/zfs list "$RUNNING_DATASET" >/dev/null 2>&1; then
  /sbin/zfs destroy -v -r "$RUNNING_DATASET" || abort "cannot destroy $RUNNING_DATASET"
fi
ROOT_MNT="/mnt/root"
/bin/mkdir -p "$ROOT_MNT"
/sbin/zfs clone -o mountpoint="$ROOT_MNT" -o canmount=noauto rpool/root@production "$RUNNING_DATASET" || abort "cannot clone rpool/root@production"
/sbin/zfs mount "$RUNNING_DATASET" || abort "cannot mount $RUNNING_DATASET"

# mount the UNRAID USB flash
BOOT_MNT="$ROOT_MNT/boot"
/bin/mkdir -p "$BOOT_MNT"
/sbin/mount -v -t vfat -o auto,rw,flush,noatime,dmask=77,fmask=177,shortname=mixed "$UNRAID_DEVICE" "$BOOT_MNT" || abort "cannot mount $UNRAID_DEVICE"

# mount the config dataset
CONFIG_MNT="$BOOT_MNT/config"
/bin/mkdir -p "$CONFIG_MNT"
/sbin/zfs set mountpoint="$CONFIG_MNT" canmount=noauto rpool/config || abort "cannot set mountpoint and canmount on rpool/config"
/sbin/zfs mount rpool/config || abort "cannot mount rpool/config"

exec /sbin/switch_root "$ROOT_MNT" /sbin/init "$@" || abort "cannot switch root to $ROOT_MNT"
